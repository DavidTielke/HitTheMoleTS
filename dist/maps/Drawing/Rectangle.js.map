{"version":3,"sources":["Drawing/Rectangle.ts"],"names":[],"mappings":";;IAEA;QAuBI,mBAAmB,CAAS,EACrB,CAAS,EACT,KAAa,EACb,MAAc;YAHF,MAAC,GAAD,CAAC,CAAQ;YACrB,MAAC,GAAD,CAAC,CAAQ;YACT,UAAK,GAAL,KAAK,CAAQ;YACb,WAAM,GAAN,MAAM,CAAQ;QAErB,CAAC;QA1BD,sBAAI,kCAAW;iBAAf;gBACI,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACtC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,MAAM,CAAC,IAAI,aAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACvC,CAAC;iBAED,UAAgB,KAAa;gBACzB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACpC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC1C,CAAC;;;WANA;QAQD,sBAAI,+BAAQ;iBAAZ;gBACI,MAAM,CAAC,IAAI,aAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;iBAED,UAAa,WAAmB;gBAC5B,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;YAC3B,CAAC;;;WALA;QAcM,4BAAQ,GAAf,UAAgB,KAAa;YACzB,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;YACpE,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YACvE,IAAI,SAAS,GAAG,WAAW,IAAI,WAAW,CAAC;YAC3C,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAEM,wBAAI,GAAX,UAAY,KAAa;YACrB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;QACtB,CAAC;QACL,gBAAC;IAAD,CAzCA,AAyCC,IAAA;IAzCY,iBAAS,YAyCrB,CAAA","file":"../../scripts/Drawing/Rectangle.js","sourcesContent":["import {Point} from \"./Point\";\r\n\r\nexport class Rectangle {\r\n\r\n    get middlePoint() : Point{\r\n        let middleX = this.x + this.width / 2;\r\n        let middleY = this.y + this.height / 2;\r\n        return new Point(middleX, middleY);\r\n    }\r\n\r\n    set middlePoint(value : Point){\r\n        let newX = value.x - this.width / 2;\r\n        let newY = value.y - this.height / 2;\r\n        this.position = new Point(newX, newY);\r\n    }\r\n\r\n    get position() : Point{\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    set position(newPosition : Point){\r\n        this.x = newPosition.x;\r\n        this.y = newPosition.y;\r\n    }\r\n\r\n    constructor(public x: number, \r\n    public y: number, \r\n    public width: number, \r\n    public height: number) {\r\n\r\n    }\r\n\r\n    public contains(point : Point) : boolean{\r\n        let containsOnX = this.x <= point.x && this.x+this.width >= point.x;\r\n        let containsOnY = this.y <= point.y && this.y + this.height >= point.y;\r\n        let contained = containsOnX && containsOnY;\r\n        return contained;\r\n    }\r\n\r\n    public move(point : Point) : void{\r\n        this.x += point.x;\r\n        this.y += point.y;\r\n    }\r\n}"]}