{"version":3,"sources":["Input/Inputs.ts"],"names":[],"mappings":";;IAGA;QAAA;QAoDA,CAAC;QA5CU,kCAAQ,GAAf;YAAA,iBAmBC;YAlBG,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA,CAAC;gBACpB,MAAM,CAAC;YACX,CAAC;YAED,WAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,CAAC,EAA9C,CAA8C,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACvB,WAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAA7B,CAA6B,CAAC,CAAC;YAC3D,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACpD,WAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,WAAW,EAA3B,CAA2B,CAAC,CAAC;YACzD,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACxB,WAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;oBAChB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;oBACpB,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAEM,iCAAO,GAAd;YAEI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;YAC5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC;QACpD,CAAC;QAGD,sBAAW,0CAAa;iBAAxB;gBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;iBACD,UAAyB,KAAY;gBACjC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAChC,CAAC;;;WAHA;QAKD,sBAAW,4CAAe;iBAA1B;gBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACjC,CAAC;iBACD,UAA2B,KAAc;gBACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;gBAChD,CAAC;YACL,CAAC;;;WANA;QAOL,sBAAC;IAAD,CApDA,AAoDC,IAAA;IAED,IAAI,KAAK,GAAG,IAAI,eAAe,EAAE;IAEhB,aAAK,SAFY;IAEV","file":"../../scripts/Input/Inputs.js","sourcesContent":["import {Game} from \"./Game\";\r\nimport {Point} from \"./Drawing/Graphics\";\r\n\r\nclass MouseController {\r\n    private _mouseButtonDown: boolean;\r\n    private _mousePosition: Point;\r\n    private _wasMouseButtonDown: boolean;\r\n\r\n    public lastMousePosition: Point;\r\n    public mouseDownPosition: Point\r\n\r\n    public updating() : void{\r\n        if(!this.mousePosition){\r\n            return;\r\n        }\r\n\r\n        Game.items.forEach(i => i.isMouseOver = i.contains(this.mousePosition));\r\n        if (this.mouseButtonDown) {\r\n            Game.items.forEach(i => i.isMouseDown = i.isMouseOver);\r\n        }\r\n\r\n        if (!this._wasMouseButtonDown && this.mouseButtonDown) {\r\n            Game.items.forEach(i => i.isDragged = i.isMouseOver);\r\n        }\r\n        if (!this.mouseButtonDown) {\r\n            Game.items.forEach(i => {\r\n                i.isDragged = false;\r\n                i.isMouseDown = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public updated() : void{\r\n        \r\n        this.lastMousePosition = this.mousePosition;\r\n        this._wasMouseButtonDown = this.mouseButtonDown;\r\n    }\r\n    \r\n\r\n    public get mousePosition(): Point {\r\n        return this._mousePosition;\r\n    }\r\n    public set mousePosition(value: Point) {\r\n        this._mousePosition = value;\r\n    }\r\n\r\n    public get mouseButtonDown(): boolean {\r\n        return this._mouseButtonDown;\r\n    }\r\n    public set mouseButtonDown(value: boolean) {\r\n        this._mouseButtonDown = value;\r\n        if (value === true) {\r\n            this.mouseDownPosition = this.mousePosition;\r\n        }\r\n    }\r\n}\r\n\r\nlet mouse = new MouseController();\r\n\r\nexport {mouse as Mouse};"]}