{"version":3,"sources":["Resources.ts"],"names":[],"mappings":";;;IAAA;QASI;YACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG;gBACb,YAAY;gBACZ,aAAa;gBACb,UAAU;gBACV,aAAa;gBACb,aAAa;gBACb,gBAAgB;gBAChB,WAAW;gBACX,aAAa;aAChB,CAAC;QACN,CAAC;QAjBD,sBAAI,6BAAM;iBAAV;gBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACrC,CAAC;;;WAAA;QAiBM,wBAAI,GAAX,UAAY,QAAoB;YAC5B,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACzC,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAA,CAAC;gBAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG;oBACvB,YAAY,EAAE,CAAC;oBACf,EAAE,CAAA,CAAC,YAAY,IAAI,YAAY,CAAC,CAAA,CAAC;wBAC7B,QAAQ,EAAE,CAAC;oBACf,CAAC;gBACL,CAAC,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;YAC/C,CAAC;QACL,CAAC;QACL,gBAAC;IAAD,CAvCA,AAuCC,IAAA;IAED,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;IACX,8BAAS","file":"../scripts/Resources.js","sourcesContent":["class Resources {\r\n    private basePath: string;\r\n    private imagesSrc: string[];\r\n    private images;\r\n\r\n    get desert(){\r\n        return this.images[\"desert.jpg\"];\r\n    }\r\n\r\n    constructor() {\r\n        this.images = [];\r\n        this.basePath = \"./images/\";\r\n        this.imagesSrc = [\r\n            \"desert.jpg\",\r\n            \"fantasy.jpg\",\r\n            \"mole.png\",\r\n            \"moleHit.png\",\r\n            \"monster.png\",\r\n            \"monsterHit.png\",\r\n            \"stats.png\",\r\n            \"vulture.png\"\r\n        ];\r\n    }\r\n\r\n    public load(callback: () => void) {\r\n        let loadedImages = 0;\r\n        let amountImages = this.imagesSrc.length;\r\n        for(let src in this.imagesSrc){\r\n            let path = this.imagesSrc[src];\r\n            this.images[path] = new Image();\r\n            this.images[path].onload = ()=>{\r\n                loadedImages++;\r\n                if(loadedImages == amountImages){\r\n                    callback();\r\n                }\r\n            };\r\n            this.images[path].src = this.basePath+path;\r\n        }\r\n    }\r\n}\r\n\r\nlet resources = new Resources();\r\nexport {resources as Resources};"]}