{"version":3,"sources":["Utils/Timer.ts"],"names":[],"mappings":";;;IAAA;QAUI,eAAmB,QAAQ;YAAR,aAAQ,GAAR,QAAQ,CAAA;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAwB,CAAC;QACvD,CAAC;QATD,sBAAW,4BAAS;iBAApB;gBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;;;WAAA;QASM,qBAAK,GAAZ;YAAA,iBAGC;YAFG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QAEM,oBAAI,GAAX;YACI,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;QAEO,oBAAI,GAAZ;YAAA,iBAIC;YAHG,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAI,EAAE,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC/C,CAAC;QAEM,iCAAiB,GAAxB,UAAyB,OAA8B;YACnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QAEM,oCAAoB,GAA3B,UAA4B,OAA8B;YACtD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC5C,EAAE,CAAA,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAA,CAAC;gBACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QACL,YAAC;IAAD,CA3CA,AA2CC,IAAA;IAaG,sBAAK;IAXT;QACI,0BAAqB,WAAW;YAAX,gBAAW,GAAX,WAAW,CAAA;QAEhC,CAAC;QACL,uBAAC;IAAD,CAJA,AAIC,IAAA;IAQG,4CAAgB","file":"../../scripts/Utils/Timer.js","sourcesContent":["class Timer{\r\n    private _timer;\r\n    private _isRunning : boolean;\r\n    private _tickCounter;\r\n    public _listener : TimerElapsedCallback[];\r\n\r\n    public get isRunning() : boolean{\r\n        return this._isRunning;\r\n    }\r\n\r\n    constructor(public interval){\r\n        this._timer = null;\r\n        this._isRunning = false;\r\n        this._tickCounter = 0;\r\n        this._listener = new Array<TimerElapsedCallback>();\r\n    }\r\n\r\n    public start() : void{\r\n        this._timer = window.setInterval(() => this.tick(), this.interval);\r\n        this._isRunning = true;\r\n    }\r\n\r\n    public stop() : void{\r\n        clearInterval(this._timer);\r\n        this._isRunning = false;\r\n    }\r\n\r\n    private tick() : void{\r\n        this._tickCounter++;\r\n        let args = new TimerElapsedArgs(this._tickCounter);\r\n        this._listener.forEach(l => l(this, args));\r\n    }\r\n\r\n    public addElapsedHandler(handler : TimerElapsedCallback){\r\n        this._listener.push(handler);\r\n    }\r\n\r\n    public removeElapsedHandler(handler : TimerElapsedCallback){\r\n        let index = this._listener.indexOf(handler);\r\n        if(index > -1){\r\n            this._listener.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass TimerElapsedArgs{\r\n    constructor(readonly tickCounter){\r\n\r\n    }\r\n}\r\n\r\ninterface TimerElapsedCallback{\r\n    (source : Timer, args : TimerElapsedArgs) : void;\r\n}\r\n\r\nexport {\r\n    Timer,\r\n    TimerElapsedArgs,\r\n    TimerElapsedCallback\r\n}\r\n"]}